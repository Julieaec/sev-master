Version 0.29 - released 16Mar11

1. Incorporated new class "events_class" which will be used to store the events loaded from both prana output and from 
    SEV generated evets.  parseArtifactsFromFile function is now replaced with parseEventsFromFile which will return a cell
    of events_class objects.  Each cell element will then be pushed to the corresponding channel_class object.  That is, each
    channel that is loaded, will have an events_class object parameter to hold these events.
    The goal here is to provide greater flexibility in adding new objects...

each class event will contain a unique event (e.g. SEV.bp_Hz20.a and SEV.bp_Hz20.b, and Default.spindle.a would all be separate event instances in a channel object.

removed the following in making this transition:
handles.user.ARTIFACT.file_art = zeros(1,DEFAULTS.study_duration_in_samples);
handles.user.PRIMARY.file_events = [];
handles.user.ARTIFACT.file_events = [];
handles.user.PRIMARY.file_uniqueSources = {};
handles.user.PRIMARY.file_uniqueSourcesCount = 0;
handles.user.PRIMARY.file_comments = {};
handles.user.ARTIFACT.file_comments = {};

2. incorporated text_buttondownFcn method into class CLASS_channel so that it can
now use the callback from the SEV when a user clicks on the textbox that contains the 
object's channel name/label and wants to change it, etc...


Axes2 - all night display
Incorporated the all night event display into the event class - now it is a function call
adjusted the sleep stage plot so it looks clearer now, no longer uses markerstyle, but uses linestyle,'-'
added a Events menu item under preferences menu label.  This creates a selection gui of the various
events that are available for display on axes2 (entire evening)


use a single cell container to hold all of the channels and extra data sets that are created for visual analysis
The channels and data sets are differentiated through the use of a structure called CHANNEL_INDICES that contains 
numerous fields to specify all channels, specific ones (e.g. primary, ocular, etc.), event channels (diff of abs(oc1-oc2), etc),
and some others.
-this helped a lot with loading various events and working with mouse callbacks.
-the index into the container cell for each object is held in the 'userdata' field of that objects line/patch handle


Batch changes
- combine channels in other cohorts that do not have a C3-M2 channel only 
e.g. C3-M2 derived from C3-Cz minus M2-Cz

PSD changes
- normalize by number of samples now
- frequency band power is calculated by summing over range/band of interest (not the mean anymore)
- if the mean is removed before processing, it's is later stored in the first frequency bin... (0Hz)
so that it's value can be observed over time
    AxesPSD
    -removed the initial tick marks and such that would show up at the outset.


bug fixes:
updated montage_dlg to handle case when no primary channels are passed in initially.
line_buttonDownFcn did not incorporate CLASS_channel objects - it now does

increased the decimal precision of the output bin labels to .001




Version 0.28 09 February, 2011 - 13:40


bug fixes:
updated montage_dlg to handle case when no primary channels are passed in initially.
line_buttonDownFcn did not incorporate CLASS_channel objects - it now does

updates:
batch process GUI updated to allow selection of primary channel based on HDR information (i.e. HDR.labels)
    of the first EDF.  
batch process GUI updated to allow selection of ocular movement detection
    SEV updated as well to incorporate STATE global to not require spindle or eyemovement detection
    during batch mode.  This was causing errors when running the next cohort
    PSD data is calculated as necessary still.
removed EDF_indices field from handles.user
changed PSA header file to not include the EDF channel index (was in parenthesis)
    and removed Hz from the sample rate and resample rate comlumn (moved to the front, text portion).

new files:
debugEDF.m - used to debug EDF files by loading data from the signal and 
        storing into parameters that can be adjusted.




Version 0.27 07January, 2011 - 11:43 AM

1. no longer required to load EMG (artifact), C-3 (primary) or occular channels
when running SEV (can be used just as a viewer) - required rewriting portions of the PRIMARY indices and such...


2. Adjusted PSD output as following:
Delta        Mean power in the >0Hz to <4Hz range
Theta        Mean power in the 4Hz to <8Hz range
Alpha        Mean power in the 8 to <12Hz range
Sigma        Mean power in the 12Hz to <16Hz range
Beta        Mean power in the 16Hz to <30Hz range
Gamma       Mean power in the 30Hz to <100Hz range (or nyquist)
Total        Total power, sum of all frequencies >0Hz to nyquist
removed sigmaalpha column from PSD output

3. applied resampling to any signal that is not 100Hz...

4. can change the color of lines now using the context menu...

5. adjusted sleep stage indexing to no longer precalculate indices for each stage.  It takes less time at loading and 
frees up memory consumption during processing.  The calculation is pushed to the end, if/when stats are saved to disk.

6. removed remaining SEV line and text struct handles (using OO programming methods now).
    UPDATES Needed
        Fabio line no longer valid
        spindle detections no longer available
        Can's lines no longer visible....

7. made artifact detection using filtering at 20Hz a method of CHANNEL class.  
No longer does the scoring with EMG as these values were seen to not be significant; we only
used the EEG threshold crossings as the criteria for artifact...

8. processArtifacts and processArtifactsNx2 put into their own .m file (removed from sev.m)
to assist with adjustment to put artifact detection into the CHANNEL class as a method.
(can't call these methods from channel class if they remained in sev.m)
-finalArtifact method no longer used

9.  rewrote save stats, stats tally, and artifact methods with the removal
 of the emg threshold detection.  Last two fields in art.txt file were dropped/removed.

10. removed initialize_PSD_sleep_stage method - moved pertinent parts out to main methods as necessary.
This function was eating up a lot of memory by creating whole vectors of sleep stage indices that ran
the duration of the raw data!

12. changed to global variables instead of using only handles.user. fields
-new global variables include
-modified/rewrote load and save parameter functions to incorporate these changes.

global DEFAULTS;
global STATE;
global ARTIFACT_DLG;
global SPINDLE_DLG;
global FABIO_DLG;
global BATCH_PROCESS;
global CAN_SPINDLE;
global PSD;

13. changed sums to means in the power spectrum ranges...
14. update batch_process_dlg - disabled analysis and detection methods for
the moment as these are no longer a priority and will take more time to update
the methods with the new code architecture that is being used.

15. artifacts are drawn in a limited fashion over each epoch - does not look accurate since 
they are actually taken over several epochs worth of data - but this saves in processing time
and memory requirements of the viewer when being used in real time.

16.  spindle methods are not displayed.


11.  removed unused functions 

--------
function update_SEVline(data,InOutStruct,parentAxes,lineColor)
function sevStruct = create_default_SEVstruct(title,lineoffset)
function [linehandle texthandle] = create_SEVline(linestruct,parentAxes,uicontextmenu_handle)
-no longer using these structures
-----

--------
findArtifacts(soi, threshold)
%finds where the signal of interest (soi) crosses the threshold
%x_art is a vector containing 1 wherever
-now just use logic where necessary to get the same result
---------

function line_handle = plotDensityArtifacts(parentH,art,color,style,x_offset,y_offset,textOffset)
%similar to plotEvents, but art contains a density value that will have a text output 
%associated with it instead.
-no longer show the density of the artifact

function b = makeFilter(start, stop, fs)
%gives fir filter impulse response (i.e. b) from start to stop with
%sampling frequency fs;
n = 100;
% b = fir1(n,[start/fs*2 stop/fs*2]); %this is a hamming window fir filter
b = fir1(n,start/fs*2,'high');
-was not being used...

function update_SEVlabels(SEVlinehandles,handles)
%updates the labels for the given linehandles on the axes whose handle is
%axeshandle
-no longer using the SEV struct structure -> switched to objects...

function [eeg_bp_density_line, count] = finalArtifact(emg_art, eeg_bp_art)
%compares both artifacts to come up with final 

eeg_bp_art_ind = find(eeg_bp_art);
% emg_ind = find(emg_art);
% emg_out = emg_art(emg_art_ind)+eeg_art(emg_art_ind);

%just add the parts that interesect/overlap with each other from the eeg_bp
%view point - the commented out code above could be used to add
%interects/overlaps from the other viewpoint of course too

eeg_bp_art(eeg_bp_art_ind) = eeg_bp_art(eeg_bp_art_ind)+emg_art(eeg_bp_art_ind);

eeg_bp_crossings = thresholdcrossings(eeg_bp_art,zeros(1,length(eeg_bp_art)));
count = size(eeg_bp_crossings,1);
unitMax = 1+1; %change this if you want to weight the channels differently; right now it is set to 2
%because each channel has a value of 1 if it is on, and we only use two
%channels at the moment
eeg_bp_density_line = zeros(1,length(eeg_bp_art));
for k=1:count
    xmin = eeg_bp_crossings(k,1);
    xmax = eeg_bp_crossings(k,2);
    eeg_bp_density_line(xmin:xmax) = sum(eeg_bp_art(xmin:xmax))/(unitMax*(xmax-xmin+1)); %possible divide by zero if threshold crossings is screwed up, but it is not :)
end;


bug fixes:
from 10/9/10:
a.    can't go from loading one EDF to loading another EDF without first closing the SEV

b.  invalid delete(h) (deleting waitbar handle) in save fft to disk (was not a problem in batch mode).

c. fixed possible bug in fabio spindle parameter selecter - parameters were being changed to the SPINDLE_DLG 
struct and not the FABIO_DLG struct


Version 0.26 09December, 2010 - 3:13 AM
added ocular channel artifact detection method
    - subtract one channel from the other
    - take the absolute value of this difference
    - find the mean
    - apply a threshold of twice the mean to detect eye movement
    - combine eye movements that are within .5 seconds of each other

adjusted the fabio method
    -instead of using a smoother (i.e. running averager) over the data, I just combined the adjacent points
in the same way we have been doing for our artifact detection


bug fixes: removed extra newline feed in output files found in v.25 (\n\n replaced with \n)

new files:
eyeMovementDetector.m

updated:
sev.m
fabiospindledetector.m
montage_dlg.m

what's different between show and draw?
        CLASS_channel_containerCell{k}.show();
        CLASS_channel_containerCell{k}.range = range;
        CLASS_channel_containerCell{k}.draw();    


find this: and replace the updates into each individual update method to check, and take out of updatePlot function...
view_options = get(handles.pop_view,'string');
current_view = view_options{get(handles.pop_view,'value')};

Version .25: 27 November 2010

[version 25] - Uploaded 11/27/10
-currently rewriting to a more object-oriented foundation.
    - loaded channels are stored as objects
    - can have a primary and artifact parameter
    - still need to transfer over current spindle and artifact detector modules to use the class method
-no longer get multiple popups when running batch mode
-now parameters.txt (should) looks correct on windows platforms.
-fixed artifact statistics problem (stages were not being initialized early enough...)

-have a montage loader for different channels
    -need to use control+left click to change the primary channel/artifact channel (or turn off)

-popup menu for different views/modules replaces radiobutton options 
    -better suited for expansion than the radiobuttons which would need more 
    screen real estate for additional modules

(these may have been completed in v.24)
DONE - 1. .sta files vice hpn
DONE - 2. load by channel name
DONE 3. invert axes so that up is down and down is up...

New files:
CLASS_channel.m
montage_dlg.m
montage_dlg.fig

Updated files:
sev.m
sev.fig (incorporates new spindle_fabio_dlg gui)
parse_artifacts_from_file.m (?)
loadEDF.m (I think this was put in with version 24, removes the need for ).
and likely others

[Version 24]

bug fixes-
artifact detector gui - had copy of spindle detector gui code in the 'Try' pushbutton function
short emg rms artifact line being offset by eeg_hp_20 line ... fixed
updated files:
artifact_dlg.m - the try button stopped working; error with high_freq field (non-existent now)



Version .23: 29 August 2010

-spindle characterization added
    -in batch process mode now
    -can also save characterizations of individual files from the file menu

-Can's newest HHT detection method added... (still not in the batch mode yet).
-sample rates loaded separately for EEG and EMG channels.  The EMG channel is resampled (more or less) to match that
of the EEG when the two are different
-fabio detector method enhanced/improved..
-fabio detector method now has a separate gui to change the detection parameters... (press Save to ensure changes are kept)


bug fixes:
-switched sigma and alpha band labels for can's output to make it correct
-try/catch problem in batch processing mode (using lasterror.message incorrectly)
-new issue with saving the PSA file due to using the .STA files to load the stages (had to transpose the S vectors)
-update the bug for new C3-M2 channel labels...

New files:
characterize_spindle2disk.m
spindle_fabio_dlg.m
spindle_fabio_dlg.fig

Updated files:
sev.m
sev.fig (incorporates new spindle_fabio_dlg gui)
batch_process_dlg.fig (new options for spindle characterization added to the front panel)
batch_process_dlg.m
parse_artifacts_from_file.m (updated the comments for better understanding and code use)
spindleDetection.m (bug where alpha and sigma labels were switched)
fabios_spindle_detector.m (smoothed out their data, resulting in an envelope detector of the filtered data)

still to do:
[call resetSEV after batch process is complete?] - yes, but not the most user friendly solution
future problems - need to come up with a method of breaking frequency bins always into 0.5 hz spacings from 0 to 50Hz
---------------------------
Version .22: 13August2010
-Can's newer HHH spindle detection method is implemented visually (does not save to file yet)
    -uses upsampled data now to help detect spindles (4x's upsampling)
    -data is downsampled to original rate when displayed
    -there are now 6 passes in his spindle detector, which are showed visually
-Nima's code is incorporated into the SEV (i.e. problems with passing parameters and producing statistics from detected spindles has been resolved, but currently does not output anything (visually or to file))
    -AMFM takes more time (future version should include method to pick one method or the other)
-HHT2disk method has been added as a batch menu option (see menu bar)
-redesigned individual line interface functions
    -right click on a line access incorported features which include
    -resize (modified now to use a signle scalar multiple)
    -move
    -add reference line (adds two horizontal lines at +/- the numeric value given)
        -assists in seeing the value/amplitude of the signal
        -set this to 0 to remove the lines
    -labels and reference lines update after resize or move is complete
    -line configurations are saved to disk upon closing
-redesigned y-axis labels to match up with corresponding lines

bug fixes:
-inverted the plotting axis - negative values of signal are now up
bugs:
fixed = uicontextmenu does not work on the first plot for some reason, have to enter update plot first somehow
may need to update the Periodogram header output... (? don't know why this is in here anymore)
    function context_menu_label_lines_Callback(hObject, eventdata, handles) is never called - can't remember what this one was for; may be discarded in future version
crashes if after starting the hht2disk method, you then continue on to try and load a file with the SEV
 - this is due to the resetSEV function which implicitly deletes the waitbar that was generated by hht2disk, I think (would take too much time to investigate right now - so just use HHT2disk and wait till it is done before using the SEV further).
currently, the SEV does not use the generated .HHT files
i_e variable in characterize.m is assumed to be amplitude of the HHT, but this may not be right
annotation bar gets glitchy when some of the dialog methods are used (i.e. loading a 

NEW FILES:
private/detectSpindle.m (replacement to detectSpindleHHT.m)
hht2disk.m
private/amfm_params1.m (Nima's characterizatin code)
private/characterize.m (interface function with the sev)
private/find_endpoints1.m
private/stat_params1.m

UPDATED FILES:
sev.fig (organized Analyzer menu and added spindle characterization option)
sev.m
private/spindleDetection.m
emd_slow.m (? can't remember if this one was modified or not)
hhspectrum.m (now runs faster - unless it was emd_slow.m that was modified)
-----------------------------------------------------------------------------------------


-------------------------
Version .21: 30July2010

Sleep stage file update
-now load sleep stages from [patient study].STA files instead of the STA.[patient study].HPN files.

L Cent and Chin EMG channels are now loaded based on their label names in the EDF instead of defaulting to channels 3 and 5
-(updated EDFs are required ('C3-M2' and 'Chin EMG' are the new labels)

Overhauled the main window in the GUI layout, moving the remaining controls to the top of the figure (instead of on the left side)
-added a spindle count/duration/percent output to the top of the figure as well for SEV and Fabio spindles
in the same way that artifacts are labeled.

Plotted Lines update:
    User context menu (right click on a line) provides the following options
    -RESIZE
        1. Hot Key - press 'r' to change to resize state
        2. click on a line to select it
        3. use the mouse wheel to increase/decrease the scale
        4. the value of the scaling used shows up in the right hand corner of the display
    -MOVE
        1. Hot key - press 'm' to change to move state
        2. click on a line to select it
        3. Move mouse up or down to reposition the line
        Note: 'Control' key is no longer used in conjunction with moving a line.
    -DEFAULT
        1. changes the resize scale back to normal/no scaling
    Left clicking on a line will reveal its scale (if it exists) in the upper right corner of the SEV

Spindle Detection update
-Option for Fabio detection method included now
    -click on the 'Fabio' radiobuton in the detection method manel at the top of the SEV main window
    -shows abs value of the bandpassed EEG signal
    -shows lower and upper thresholds
    -changed color map option to hopefully allow it to show up easier since the detections are so small

small changes:
added '#' sign in front of each line of metadata in the PSA and FFT output files.

updated files:
sev.m
sev.fig
fabios_spindle_detector.m



Version .20: 21July10

fixed source method display implementation
-assign a {default} label for messages that do not match the code specified...
-produce a {SEV} default label method... (outside of the actual loaded channels)
-produce a {Fabio} method ... (outside of the actual loaded channels)
-make labels adjust with the new methods...

bug fixes:
-changed code to deal with PRANA 'window' function.  The issue was in CalcPSD.m and has been taken care of (rewrote the eval method).
-issues with PRANA methods being at the top of a Matlab's path settings.  
    - move prana to the bottom
    - move Biosig paths to the bottom with the exception of the t200 biosig 
    subfolder which needs to be at the top for sload to work (to open the EDFs)
-sev_parameters.txt file now use carriage returns instead of line feeds which provides better viewing on window platforms.


new files:
artifact_dlg.m - moved artifact controls off of main sev figure/GUI to separate figure/GUI ... 
artifact_dlg.fig - in a similar fashion to the spindle_dlg controls produced in version .18
saveStruct.m - used to save structures to a file.  Helpful in general, but used here to save SEV parameters to file
loadStruct.m - loads structures that have been saved to a file using the saveStruct function (above)

updated files:
calcPSD.m - see bug fixes
parseArtifactsFromFile.m  - had to adjust this to handle default labels (i.e. labels without the '[source].[event].[label]' structure.
sev.m
sev.fig - added Artifact Detector GUI tool under Analyzer menu (next to spindle detector)

version 19: 16July2010

batch process
    - save the last batch processed folder as a parameters variable for later retrieval
    - save a copy of the parameters.txt file to the same folder as the batch folder
Interface
    -Now possible to move channels up and down with mouse drags
        -press Control and then click on a line to begin dragging the line to its new default location
        -changes are saved in the preference .txt file
        -text labels move up and down as well on the next plot update/refresh
Labels
    - changed the names of the labels put on the Can radiobutton ('Stage #' renamed to 'Pass #' and bands were given explicit frequency ranges)
    - editable titles/labels 
        - just click on a label to change its name (need to update the plot still (i.e. click over an epoch)
        - changes are saved to the sev_parameters.txt file for future use upon closing out SEV
Fabio Ferrarelli spindle detection method added
    - detected spindles are saved to the events text file when you click save events or run a batch job
    - detected spindles display with other spindles on its own line...
Misc
    - Warning dialog box appears now when errors are encountered
    - Minor grid lines are now drawn at 0.5 second intervals (regardless of scale), 
        -this can be turned on or off by right clicking on the main axes and selecting/deselecting the Show Grid option. (draw_y_grid(...))

bug fixes
fixed ismac command - remove this option since it is buggy/does not work in pc's
files_skipped - does not exist as a variable - problem was the first variable was called files_skiped (oops)
fixed sev_parameters.txt loading bug - before it would not correctly not load all of the set parameters
can now click on the sleep stage markings in the lower axes and have the epoch change (before it would change only if you clicked on the white space)

updated files
sev.m
spindleDetection.m

new files
fabios_spindle_detector.m - contains Fabio Ferrarelli's method for finding spindles


version 18: 8July2010

-updated the batch_process bug which continued the process even if a user cancelled the batch_process dialog
(in batch file process GUI/don't go to the pathname selection if the user cancels on the first part...)
-updated the psd and spindle dialogs so that they return [] or modified=false if no changes from the original were made (sort of, it still registers a change if you modify from the original value and then modify it back to the original value)
-error warning for not being able to find all of the necessary files (.m and evt, .hpn) 
-added further error checking to batch processing mode and for the usual loading of EDF's
    -batch processing mode now catches any errors (in addition to missing files) and logs the result
    -output is also sent to the command line
-summary message box at the end of batch processing mode now available (tells how many files were attempted, processed, and skipped
-spindle detection method labels are now always in place (used to only be available in the hope method)
-changed Hope to Can
 - integrated Can's spindle detector into the Can radiobutton option
 - plots 3 stages from his spindle detector
 - plots alpha, sigma, beta, and high pass 4khz filter results in addition to the first IMF (With freq and amplitude as well)
-New Spindle detection dialog box
 - accessible under the menu bar Analyzer option
 - can change different spindle detection parameters
    - band pass frequencies (high and low values)
    - window type (hanning, not editable in the GUI at the moment)
    - filter order N (100 default)
    - RMS window to apply to it
 - clicking Test will update the plot showing what the results will look like using the current sample method
 - clicking Save will save those parameters to SEV for continued use - results are also stored to file
 - clicking cancel nullifies any changes (though you may need to update the plot if you had already tried the 'Test' option with new parameters (just click over an epoch and come back to update the plot)



files updated:
batch_process_dlg.m (? - maybe updated)
psd_dlg.m
psd_dlg.fig
sev.m
sev.fig

NEW:
spindle_dlg.m
spindle_dlg.fig


*EMD folder (Can's EMD code)
private folder (Can's spindle code) - altered spindleDetection.m and detectSpindleHHT to integrate plot results and names into SEV

*note: you need to be in this working directory since there are difference versions of the code being used right now...
that is, the userpath should be set to wherever the SEV file is...


SEV .17

updated calcPSD to use the periodogram method of calculating the PSD
(welch averaging can be done later on own by user after exporting...)
created psd_dlg.fig and psd_dlg.m to update the PSD parameters that can be used
    -includes a window type (with display of different window options
    -window length
    -window interval

added option to load/save SEV parameters from a text file...
 - includes a time stamp
 - updated each time SEV is closed
 - names on the left are added directly as structures to the handles.user structure (i.e. don't modify the names, values on the right are okay to change)
 - default filename where this is saved is sev_parameters.txt

CTRL-C now terminates execution (helpful if there is a bug in normal shutdown procedure which causes the program to hang)

added new dialog to assist in running the batch process job
- can select which files you want saved, and the filenames to be used
- enabled PSD parameter tweaking before a file is loaded in case user wants to adjust things before running a batch job
- small fix to check for mac computers, and use a better suited get directory path for the batch job on PCs.
- now checks for .hpn and evt files and skips processing the edf if these files are not found (results are saved to a log file)
- batch processing parameters added to the sev_parameters.txt file that is saved each time
- stats tally was added to the parameters .txt file as an option to manipulate, but not in the helper dialog yet


Required Files:

batch_process_dlg.fig
batch_process_dlg.m
calcPSD.m
emd_slow.m
findpeaks.m (required by emd_slow.m)
findSpindles.m
hhspectrum.m
instfreq.m (required by hhspectrum.m)
movingRMS.m
parseArtifactsFromFile.m
psd_dlg.fig
psd_dlg.m
saveParametersToFile.m
sev v.15.txt
sev_parameters.fig
sev_parameters.m
sev.fig
sev.m
thresholdcrossings.m